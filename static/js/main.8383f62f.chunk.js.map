{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactsList/ContactsList.module.css","components/FilterContacts/FilterContacts.module.css","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/FilterContacts/FilterContacts.js","App.js","reportWebVitals.js","index.js","App.module.css"],"names":["module","exports","INITIAL_STATE","name","phone","ContactForm","state","handleChangeForm","target","value","setState","handleFormSubmit","event","preventDefault","onAdd","props","validateForm","id","uuid","resetForm","onCheckUnique","alert","this","className","s","form","onSubmit","type","pattern","title","required","placeholder","onChange","Component","ContactsListItem","onRemove","contact","onClick","ContactsList","contacts","length","map","FilterContacts","filter","input","App","number","handleAddContact","newContact","handleCheckUniqueName","isUniqueContact","find","handleRemoveContacts","handleFilterChange","getVisibleContacts","toLowerCase","includes","localStorage","getItem","JSON","parse","prevState","setItem","stringify","visibleContacts","container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8383f62f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__27y1P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactsList_contact__1aCfJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"FilterContacts_input__3_xlD\"};","import { Component } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport s from './ContactForm.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  phone: '',\n};\n\nexport default class ContactForm extends Component {\n  state = INITIAL_STATE;\n\n  handleChangeForm = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const { name, phone } = this.state;\n    const { onAdd } = this.props;\n    const isValidatedForm = this.validateForm();\n    if (!isValidatedForm) return;\n    onAdd({ id: uuid(), name, phone });\n    this.resetForm();\n  };\n\n  validateForm = () => {\n    const { name, phone } = this.state;\n    const { onCheckUnique } = this.props;\n    if (!name || !phone) {\n      alert('Please, enter both fields');\n      return false;\n    }\n    return onCheckUnique(name);\n  };\n\n  resetForm = () => this.setState(INITIAL_STATE);\n\n  render() {\n    const { name, phone } = this.state;\n    return (\n      <form className={s.form} onSubmit={this.handleFormSubmit}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={this.handleChangeForm}\n        />\n\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n          placeholder=\"Enter phone number\"\n          value={phone}\n          onChange={this.handleChangeForm}\n        />\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n","import { v4 as uuid } from 'uuid';\nimport s from './ContactsList.module.css';\n\nconst ContactsListItem = ({ id, name, phone, onRemove }) => {\n  return (\n    <li className={s.contact}>\n      {name}: {phone} <button onClick={() => onRemove(id)}>Delete</button>\n    </li>\n  );\n};\n\nconst ContactsList = ({ contacts, onRemove }) => {\n  if (contacts.length === 0) return null;\n  return (\n    <ul>\n      {contacts.map(contact => (\n        <ContactsListItem key={uuid()} {...contact} onRemove={onRemove} />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactsList;\n","import s from './FilterContacts.module.css';\n\nconst FilterContacts = ({ filter, onChange }) => {\n  return (\n    <input\n      className={s.input}\n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={({ target }) => onChange(target.value)}\n      placeholder=\"Search contact\"\n    />\n  );\n};\nexport default FilterContacts;\n","import { Component } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport FilterContacts from './components/FilterContacts/FilterContacts';\nimport s from './App.module.css';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  handleAddContact = newContact =>\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, newContact],\n    }));\n\n  handleCheckUniqueName = name => {\n    const { contacts } = this.state;\n    const isUniqueContact = !!contacts.find(contact => contact.name === name);\n    isUniqueContact && alert('Contact is already exist');\n    return !isUniqueContact;\n  };\n\n  handleRemoveContacts = id =>\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n\n  handleFilterChange = filter => this.setState({ filter });\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  componentDidMount() {\n    if (localStorage.getItem('contacts') !== null) {\n      this.setState({ contacts: JSON.parse(localStorage.getItem('contacts')) });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div className={s.container}>\n        <h2 className={s.title}>Contact form</h2>\n\n        <ContactForm\n          onAdd={this.handleAddContact}\n          onCheckUnique={this.handleCheckUniqueName}\n        />\n\n        <h2 className={s.title}>Contact list</h2>\n\n        <FilterContacts filter={filter} onChange={this.handleFilterChange} />\n\n        <ContactsList\n          contacts={visibleContacts}\n          onRemove={this.handleRemoveContacts}\n        />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1f4WH\",\"title\":\"App_title__TRHh-\"};"],"sourceRoot":""}